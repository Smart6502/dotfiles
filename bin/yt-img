#!/bin/bash
# depends: ytdl, mpv, sxiv
# bug: sometimes the sxiv reappears after video selection [ yet to be fixed ]

flushch=true
zoom=150
volume=60
guicmd="sxiv -btioz $zoom"
geobypass=false
format=best

{
	# selectorcolors REQUIRE either ricing config.h OR using Xresources
	col0=
	col1=
	col2=
} # Colors

while [ -n "$1" ]; do
	case "$1" in
	
	-a) echo "Using only AUDIO" ; pops+=" --no-video " ;;

	-c) echo "Not flushing cache.." ; flushch=false ;;

	-f) 	param="$2"
		echo "Format given: $param"
		format="$param"
		shift
		;;

	-g) echo "Using geo-bypass method.." ; geobypass=true ;;

	-p)	
		param="$2"
		echo "Player options given: $param"
		pops="$param"
		shift
		;;

	--)
		shift
		break
		;;

	*) echo "Option $1 not recognized" && exit 1 ;;
	esac
	shift

done
total=1
for param in "$@"; do
	echo "#$total: $param"
	total=$(($total + 1))
done
echo -n "Search: "
read -r query
[ -z "$query" ] && exit 1
query=$(sed \
	-e 's|+|%2B|g'\
	-e 's|#|%23|g'\
	-e 's|&|%26|g'\
	-e 's| |+|g'\
	<<< "$query")
response="$(curl -s "https://www.youtube.com/results?search_query=$query" |\
	sed 's|\\.||g')"
if ! grep -q "script" <<< "$response"; then echo "unable to fetch yt"; exit 1; fi
vgrep='"videoRenderer":{"videoId":"\K.{11}".+?"text":".+?[^\\](?=")'
pgrep='"playlistRenderer":{"playlistId":"\K.{34}?","title":{"simpleText":".+?[^\"](?=")'
getresults() {
	  grep -oP "$1" <<< "$response" |\
		awk -F\" -v p="$2" '{ print $1 "\t" p " " $NF}'
}
bold=$(tput bold)
norm=$(tput sgr0)
videoids=$(getresults "$vgrep")
playlistids=$(getresults "$pgrep" "(playlist)")
[ -n "$playlistids" ] && ids="$playlistids\n"
[ -n "$videoids" ] && ids="$ids$videoids"
videolink="https://youtu.be/"
playlink="https://youtube.com/playlist?list="
cachedir="/home/$USER/.local/bin/.yt-img-cache"
[ -d $cachedir ] || mkdir -p $cachedir
[ $flushch ] && rm $cachedir/*jpg && echo "Cache was flushed successfully" || echo "Cache wasn't flushed: man"
gthumb() {
	local id=$1
	local imgurl=https://img.youtube.com/vi/$id/0.jpg
	[ -f $id.jpg ] || curl -s $imgurl -o $cachedir/$id.jpg
	echo "Thumbnail received - $id.jpg"
}
noch() {
	echo "No choice given, aborting.."
	exit 1
}
echo -e "$ids" | while read resline || [[ -n $resline ]]; do tmpid="$(printf "${resline:0:11}") "; printf "$tmpid" >> $cachedir/.chid; done
clear
echo "Fetching thumbnails..."
for videoid in $(cat $cachedir/.chid); do gthumb $videoid; done
echo "Flushing recvch..."
rm $cachedir/.chid
printf "\nm to mark a video and q to exit selector and start playing it\n\n"
playvid() {
	TLF="$cachedir/.logged"
	rm "$TLF"
	> "$TLF"
	[ -z "$title" ] || printf "Playing now: $bold$title$norm\n\n"
	nohup mpv --volume=$volume $1 &> "$TLF" & tail -f "$TLF" &
}
while true; do
	while ! [ -z $(pidof mpv) ]; do sleep 5; done
	printf "\nChoose to play: \n\n"
	[ -z $(pidof mpv) ] && id=$(ls $cachedir/*jpg | $guicmd)
	id=${id:(-15)}
	[ -z $id ] && exit 1
	id=${id:0:(-4)}
	title=$(echo -e "$ids" | grep "$id" | cut -d'	' -f2)
	case $id in
		# 11 digit id = video
		???????????) playvid "$videolink$id" ;;
		# 34 digit id = playlist
		??????????????????????????????????) playvid "$playlink$id" ;;
		*) exit ;;
	esac
done

